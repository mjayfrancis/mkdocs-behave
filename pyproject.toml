[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mkdocs-behave"
dynamic = ["version"]
description = 'A MkDocs plugin to render behave feature files'
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [
  { name = "Matthew Francis", email = "mjay.francis@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "MkDocs >= 1.5.3",
  "behave == 1.2.6",
]

[project.urls]
Documentation = "https://github.com/mjayfrancis/mkdocs-behave#readme"
Issues = "https://github.com/mjayfrancis/mkdocs-behave/issues"
Source = "https://github.com/mjayfrancis/mkdocs-behave"

[project.entry-points.'mkdocs.plugins']
behave = 'mkdocs_behave:BehavePlugin'

[tool.hatch.version]
path = "mkdocs_behave/__about__.py"

[tool.hatch.envs.default]
dependencies = []

[[tool.hatch.envs.all.matrix]]
python = ["3.8", "3.9", "3.10", "3.11"]

[tool.hatch.envs.lint]
detached = true
dependencies = [
  "black>=23.1.0",
  "mypy>=1.0.0",
  "ruff>=0.0.243",
  "MkDocs >= 1.5.3",
]
[tool.hatch.envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:mkdocs_behave}"
style = [
  "ruff {args:.}",
  "black --check --diff {args:.}",
]
fmt = [
  "black {args:.}",
  "ruff --fix {args:.}",
  "style",
]
all = [
  "style",
  "typing",
]

[tool.black]
target-version = ["py38"]
line-length = 120
skip-string-normalization = true

[tool.ruff]
line-length = 120
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore asserts
  "S101",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
]


[tool.ruff.isort]
known-first-party = ["mkdocs_behave"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.mypy]
check_untyped_defs = true
